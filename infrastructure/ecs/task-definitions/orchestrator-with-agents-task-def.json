{
  "family": "multilingual-inference-orchestrator-with-agents",
  "networkMode": "awsvpc",
  "requiresCompatibilities": ["FARGATE"],
  "cpu": "2048",
  "memory": "4096",
  "runtimePlatform": {
    "cpuArchitecture": "ARM64",
    "operatingSystemFamily": "LINUX"
  },
  "executionRoleArn": "arn:aws:iam::${AWS_ACCOUNT_ID}:role/${STACK_NAME}-task-role",
  "taskRoleArn": "arn:aws:iam::${AWS_ACCOUNT_ID}:role/${STACK_NAME}-task-role",
  "containerDefinitions": [
    {
      "name": "orchestrator-with-agents",
      "image": "${ECR_REPOSITORY_URI}:latest",
      "essential": true,
      "portMappings": [
        {
          "containerPort": 8080,
          "protocol": "tcp",
          "name": "http"
        }
      ],
      "environment": [
        {
          "name": "ENVIRONMENT",
          "value": "production"
        },
        {
          "name": "AWS_DEFAULT_REGION",
          "value": "${AWS_REGION}"
        },
        {
          "name": "HOST",
          "value": "0.0.0.0"
        },
        {
          "name": "PORT",
          "value": "8080"
        },
        {
          "name": "LOG_LEVEL",
          "value": "INFO"
        },
        {
          "name": "PYTHONPATH",
          "value": "/app"
        },
        {
          "name": "PYTHONUNBUFFERED",
          "value": "1"
        }
      ],
      "mountPoints": [],
      "logConfiguration": {
        "logDriver": "awslogs",
        "options": {
          "awslogs-group": "/ecs/${STACK_NAME}-orchestrator",
          "awslogs-region": "${AWS_REGION}",
          "awslogs-stream-prefix": "ecs"
        }
      },
      "healthCheck": {
        "command": [
          "CMD-SHELL",
          "curl -f http://localhost:8080/health || exit 1"
        ],
        "interval": 30,
        "timeout": 5,
        "retries": 3,
        "startPeriod": 60
      },
      "command": [
        "python",
        "-m",
        "inference.server"
      ],
      "workingDirectory": "/app",
      "user": "1000:1000",
      "linuxParameters": {
        "initProcessEnabled": true
      },
      "ulimits": [
        {
          "name": "nofile",
          "softLimit": 65536,
          "hardLimit": 65536
        }
      ]
    }
  ],
  "volumes": [],
  "tags": [
    {
      "key": "Environment",
      "value": "production"
    },
    {
      "key": "Service",
      "value": "orchestrator-with-agents"
    },
    {
      "key": "Platform",
      "value": "ARM64"
    },
    {
      "key": "Version",
      "value": "2.0"
    }
  ]
}