services:
  inference:
    build:
      context: .
      dockerfile: Dockerfile
      platforms:
        - linux/arm64
    container_name: multilingual-inference-test
    platform: linux/arm64
    ports:
      - "8080:8080"
    environment:
      - INFERENCE_ENV=local
      - LOG_LEVEL=DEBUG
      - USE_MOCK_SERVICES=true
      - MOCK_AWS_SERVICES=true
      - MOCK_MILVUS=true
      - MOCK_SPACY=true
      - MOCK_SENTENCE_TRANSFORMERS=true
      - PYTHONPATH=/app
    volumes:
      - ./logs:/app/logs
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    networks:
      - test-network

  # Lightweight mock Milvus service
  mock-milvus:
    image: python:3.13-slim
    container_name: mock-milvus-test
    platform: linux/arm64
    ports:
      - "19530:19530"
    command: >
      sh -c "
        pip install fastapi uvicorn &&
        python -c \"
        from fastapi import FastAPI
        import uvicorn
        app = FastAPI()
        @app.get('/health')
        def health(): return {'status': 'healthy'}
        @app.get('/healthz')
        def healthz(): return {'status': 'ok'}
        @app.post('/collections')
        def create_collection(): return {'status': 'success'}
        @app.get('/collections')
        def list_collections(): return {'collections': []}
        @app.post('/search')
        def search(): return {'results': []}
        uvicorn.run(app, host='0.0.0.0', port=19530)
        \"
      "
    networks:
      - test-network

networks:
  test-network:
    driver: bridge

volumes:
  logs: