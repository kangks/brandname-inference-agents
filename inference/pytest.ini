[tool:pytest]
# Pytest configuration for inference system testing

# Test discovery
testpaths = tests
python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*

# Markers for test categorization
markers =
    unit: Unit tests for individual components
    integration: Integration tests for component interaction  
    e2e: End-to-end tests with full system
    aws: Tests requiring AWS services
    slow: Tests that take longer to execute (>5 seconds)
    milvus: Tests requiring Milvus database
    mock: Tests using mocked dependencies
    performance: Performance and load testing
    multilingual: Tests with multilingual content
    edge_case: Tests with edge cases and error conditions

# Async testing configuration
asyncio_mode = auto

# Output configuration
addopts = 
    --strict-markers
    --strict-config
    --verbose
    --tb=short
    --durations=10
    --color=yes
    --disable-warnings

# Minimum version requirements
minversion = 6.0

# Test timeout (in seconds)
timeout = 300

# Parallel execution
# Uncomment to enable parallel test execution
# addopts = -n auto

# Coverage configuration (if using pytest-cov)
# addopts = --cov=inference.src --cov-report=html --cov-report=term-missing

# Logging configuration
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Filter warnings
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore::UserWarning:milvus*
    ignore::UserWarning:sentence_transformers*
    ignore::UserWarning:transformers*